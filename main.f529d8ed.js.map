{"version":3,"sources":["scripts/main.js"],"names":["employees","document","querySelectorAll","employeesList","querySelector","sortList","list","sort","a","b","x","dataset","salary","replace","y","innerHTML","forEach","employee","appendChild","getEmployees","res","obj","name","innerText","position","age","push"],"mappings":";AAAA,aAsCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EApCA,IAAMA,EAAgBC,EAAAA,SAASC,iBAAiB,OAC1CC,EAAgBF,SAASG,cAAc,MAEvCC,EAAW,SAACC,GACTA,OAAAA,EAAKC,KAAK,SAACC,EAAGC,GACbC,IAAAA,EAAIF,EAAEG,QAAQC,OAAOC,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAGlDC,OAFGL,EAAEE,QAAQC,OAAOC,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAE9CH,KAIfL,EAASL,GAETG,EAAcY,UAAY,GAE1Bf,EAAUgB,QAAQ,SAAAC,GAChBd,EAAce,YAAYD,KAG5B,IAAME,EAAe,SAACb,GACdc,IAAAA,EAAM,GAYLA,OAVPd,EAAKU,QAAQ,SAAAC,GACLI,IAAAA,EAAM,GAEZA,EAAIC,KAAOL,EAASM,UACpBF,EAAIG,SAAWP,EAASN,QAAQa,SAChCH,EAAIT,OAASK,EAASN,QAAQC,OAC9BS,EAAII,IAAMR,EAASN,QAAQc,IAC3BL,EAAIM,KAAKL,KAGJD,GAGTD,EAAanB","file":"main.f529d8ed.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst employees = [...document.querySelectorAll('li')];\nconst employeesList = document.querySelector('ul');\n\nconst sortList = (list) => {\n  return list.sort((a, b) => {\n    const x = a.dataset.salary.replace('$', '').replace(',', '');\n    const y = b.dataset.salary.replace('$', '').replace(',', '');\n\n    return y - x;\n  });\n};\n\nsortList(employees);\n\nemployeesList.innerHTML = '';\n\nemployees.forEach(employee => {\n  employeesList.appendChild(employee);\n});\n\nconst getEmployees = (list) => {\n  const res = [];\n\n  list.forEach(employee => {\n    const obj = {};\n\n    obj.name = employee.innerText;\n    obj.position = employee.dataset.position;\n    obj.salary = employee.dataset.salary;\n    obj.age = employee.dataset.age;\n    res.push(obj);\n  });\n\n  return res;\n};\n\ngetEmployees(employees);\n"]}